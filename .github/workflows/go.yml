name: Go CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version : [ '1.20', '1.21', '1.22' ] 
  
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install dependencies
        run: go mod tidy

      - name: Run Linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.59
          args: controllers/ database/ models/ routes/

  build:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        go-version: [ '1.20', '1.21', '1.22' ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: go mod tidy

      - name: Start Database
        run: docker compose up -d postgres

      - name: Wait for PostgreSQL
        run: |
          echo "Aguardando PostgreSQL iniciar..."
          sleep 10
          docker compose logs postgres

      - name: Start App
        run: sudo docker compose up -d app

      - name: Check Docker services
        run: docker compose ps

      - name: Check Docker logs
        run: docker compose logs

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        go-version: ['1.20', '1.21', '1.22']
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: go mod tidy

      - name: Start Services
        run: docker compose up -d

      - name: Wait for App
        run: |
          echo "Aguardando app iniciar..."
          sleep 10
          docker compose ps

      - name: Run Tests
        run: docker compose exec app go test ./...